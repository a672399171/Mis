<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.zzuzl.dao.StudentDao">

    <sql id="_listWhere">
        <where>
            and valid='1'
            <if test="schoolNum != null and schoolNum != ''">
                and schoolNum=#{schoolNum}
            </if>
            <if test="name != null and name != ''">
                and `name`=#{name}
            </if>
            <if test="majorCode != null and majorCode != ''">
                and classCode like #{majorCode}"%"
            </if>
            <if test="grade != null and grade != ''">
                and grade=#{grade}
            </if>
        </where>
    </sql>

    <select id="searchBySchoolNum" resultType="cn.zzuzl.model.Student">
        select
        schoolNum,
        grade,
        `name`,
        sex,
        classCode,
        birthday,
        nation,
        politicalStatus,
        idNo,
        accountNo,
        originAddress,
        homeAddress,
        entranceDate,
        schoolYear,
        residence,
        phone,
        qq,
        email,
        parentPhone,
        dormNo,
        direction
        from student
        where schoolNum=#{schoolNum}
    </select>

    <insert id="insertStudent" parameterType="cn.zzuzl.model.Student">
        insert ignore into student(
        schoolNum,
        grade,
        `name`,
        sex,
        classCode,
        createTime,
        updateTime
        ) values(
        #{schoolNum},
        #{grade},
        #{name},
        #{sex},
        #{classCode},
        now(),
        now()
        )
    </insert>

    <select id="searchStudent" resultType="cn.zzuzl.model.Student">
        select
        schoolNum,
        grade,
        `name`,
        sex,
        classCode
        from student
        <include refid="_listWhere"/>
        <if test="sortField != null and sortField != '' and sortDir != null and sortDir != ''">
            order by #{sortField} #{sortDir}
        </if>
        <if test="perPage != null and perPage &gt; 0">
            limit #{start},#{perPage}
        </if>
    </select>

    <select id="getStudentCount" resultType="int">
        select
        count(1) as num
        from student
        <include refid="_listWhere"/>
    </select>

    <update id="updateStudent">
        update student set
        birthday=#{birthday},
        nation=#{nation},
        politicalStatus=#{politicalStatus},
        idNo=#{idNo},
        accountNo=#{accountNo},
        originAddress=#{originAddress},
        homeAddress=#{homeAddress},
        entranceDate=#{entranceDate},
        schoolYear=#{schoolYear},
        residence=#{residence},
        phone=#{phone},
        qq=#{qq},
        email=#{email},
        parentPhone=#{parentPhone},
        dormNo=#{dormNo},
        direction=#{direction},
        updateTime=now()
        where schoolNum=#{schoolNum}
    </update>

    <update id="updateInvalid">
        update student
        set valid='0'
        where schoolNum=#{schoolNum}
    </update>


    <insert id="insertLoginRecord">
        insert ignore into loginRecord(
        schoolNum,
        loginTime,
        ip,
        location
        ) values (
        #{schoolNum},
        now(),
        #{ip},
        #{location}
        )
    </insert>
</mapper>